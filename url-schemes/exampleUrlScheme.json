{
  "openapi": "3.0.1",
  "info": {
    "title": "ISC Example Swagger Specs",
    "description": "Example specification of how a API might look using the ISC schemas",
    "version": "1.0",
    "contact": {
      "name": "Animal Data Exchange Working Group",
      "url": "https://www.icar.org/index.php/technical-bodies/working-groups/animal-data-exchange-wg/",
      "email": "icar@icar.org"
    }
  },
  "tags": [{
      "name": "additions",
      "description": "new endpoints not yet approved"
    }
  ],
  "paths": {
    "/animal/{animal-id}:": {
      "get": {
        "operationId": "get-animal",
        "summary": "Returns the details for the specified animal",
        "tags": [
          "Animal"
        ],
        "parameters": [{
            "$ref": "#/components/parameters/animal-id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful. The response contains the animal life data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/iscAnimalCoreResource"
                }
              }
            }
          }
        }
      }
    },
    "/locations/{location-id}/animals": {
      "get": {
        "operationId": "get-location-animals",
        "summary": "Gets a list of animals for the location",
        "tags": [
          "Animal"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/location-id"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful. The response contains a list of animals",
            "content": {
              "application/json": {
                "type": "array",
                "items":{
                  "schema": {
                    "$ref": "#/components/schemas/iscAnimalCoreResource"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "iscAnimalCoreResource": {
        "$ref": "../resources/iscAnimalCoreResource.json"
      },
      "iscScoreReference": {
        "$ref": "../resources/iscScoreEventCoreResource.json"
      },
      "iscTreatmentEvent": {
        "$ref": "../resources/iscTreatmentEvent.json"
      },
      "iscDiagnosisEvent": {
        "$ref": "../resources/iscDiagnosisEventResource.json"
      },
      "iscMovementArrivalEvent": {
        "$ref": "../resources/iscMovementArrivalEventResource.json"
      }
    },
    "parameters": {
      "location-scheme": {
        "name": "location-scheme",
        "in": "path",
        "description": "The scheme id for the location identifier.",
        "required": true,
        "schema": {
          "type": "string",
          "enum": [
            "nl.ubn",
            "de.farmid",
            "be.pen"
          ]
        }
      },
      "location-id": {
        "name": "location-id",
        "in": "path",
        "description": "The unique identifier for the location.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "animal-id": {
        "name": "animal-id",
        "in": "path",
        "description": "The unique identifier for the animal.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "start-date-time": {
        "name": "start-date-time",
        "in": "query",
        "description": "The start of the date-time range for the data to get in the request.",
        "schema": {
          "type": "string",
          "format": "date-time"
        }
      },
      "end-date-time": {
        "name": "end-date-time",
        "in": "query",
        "description": "The end of the date-time range for the data to get in the request.",
        "schema": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "responses": {
      "default": {
        "description": "An error has occurred while handling the request. Check the content of the message for the error details.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/error"
                  }
                }
              },
              "description": "A default response containing only a list of errors"
            }
          }
        }
      }
    }
  }
}
